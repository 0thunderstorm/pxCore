
all: rtNode
clean:
	rm -rf $(OBJDIR)
	rm -f rtNode

VPATH=linux

RT_SRCS=\
    rtFile.cpp \
    rtError.cpp \
    rtLog.cpp \
    rtPathUtils.cpp \
    rtString.cpp \
    rtObject.cpp \
    rtFunctionWrapper.cpp \
    rtObjectWrapper.cpp \
    rtValue.cpp \
    jsCallback.cpp \
    linux/rtMutexNative.cpp \
    linux/rtThreadPoolNative.cpp \
    rtThreadPool.cpp \
    rtThreadTask.cpp \
    rtWrapperUtils.cpp \
    utf8.c

PX_SRCS=\
    pxScene2d.cpp \
    pxRectangle.cpp \
    pxText.cpp \
    pxText2.cpp \
    pxImage.cpp \
    pxUtil.cpp \
    pxContextGL.cpp \
    pxImage9.cpp \
    pxTextureCacheObject.cpp \
    pxFileDownloader.cpp \
    pxInterpolators.cpp

EXTDIR=../external
PXCOREDIR=../../../
PXHDRS=$(PXCOREDIR)/src
PXLIBS=$(PXCOREDIR)/build/glut

NODEINC=../external/libnode
NODEDIR=../external/libnode

SEARCH=\
  -Ilinux \
  -I$(EXTDIR)/jpg \
  -I$(EXTDIR)/curl/include \
  -I$(EXTDIR)/ft/include \
  -I$(EXTDIR)/png \
  -I$(PXHDRS)\
  -I. \
  -I$(NODEINC)/src \
  -I$(NODEINC)/deps/uv/include \
  -I$(NODEINC)/deps/v8 \
  -I$(NODEINC)/deps/debugger-agent/include \
  -I$(NODEINC)/deps/v8/include


CXXFLAGS=  $(SEARCH) -DENABLE_GLUT -DRT_PLATFORM_LINUX -DPX_PLATFORM_GLUT
#CXXFLAGS=-Wall -Wextra -g $(SEARCH) -DENABLE_GLUT -DRT_PLATFORM_LINUX -DPX_PLATFORM_GLUT


LDPNG    = -L$(EXTDIR)/png/.libs -lpng16
LDJPG    = -L$(EXTDIR)/jpg/.libs -ljpeg
LDFT     = -L$(EXTDIR)/ft/objs/.libs -lfreetype
LDCURL   = -L$(EXTDIR)/curl/lib/.libs -lcurl

LDNODE   = -L$(NODEDIR)/out/Release/obj.target
LDNODEV8 = -L$(NODEDIR)/out/Release

#LDNODE   = -L$(NODEDIR)/out/Debug/obj.target
#LDNODEV8 = -L$(NODEDIR)/out/Debug


LDEXT   = $(LDPNG) $(LDJPG) $(LDFT) $(LDCURL) $(LDNODE) $(LDNODEV8)

LDFLAGS = -L$(PXLIBS) -lnode -lpxCore -pthread -lglut -lGLEW -lGL $(LDEXT) -ldl -lrt -lv8_libplatform


OBJDIR=obj

rtMutexNative.o: linux/rtMutexNative.cpp
	g++ -o $(OBJDIR)/rtMutexNative.o -Wall $(CXXFLAGS) -c linux/rtMutexNative.cpp

rtThreadPoolNative.o: linux/rtThreadPoolNative.cpp
	g++ -o $(OBJDIR)/rtThreadPoolNative.o -Wall $(CXXFLAGS) -c linux/rtThreadPoolNative.cpp

$(OBJDIR)/rtWrapperUtils.o: jsbindings/rtWrapperUtils.cpp
	g++ -o $(OBJDIR)/rtWrapperUtils.o -Wall $(CXXFLAGS) -c jsbindings/rtWrapperUtils.cpp

$(OBJDIR)/rtFunctionWrapper.o: jsbindings/rtFunctionWrapper.cpp
	g++ -o $(OBJDIR)/rtFunctionWrapper.o -Wall $(CXXFLAGS) -c jsbindings/rtFunctionWrapper.cpp

$(OBJDIR)/rtObjectWrapper.o: jsbindings/rtObjectWrapper.cpp
	g++ -o $(OBJDIR)/rtObjectWrapper.o -Wall $(CXXFLAGS) -c jsbindings/rtObjectWrapper.cpp

$(OBJDIR)/jsCallback.o: jsbindings/jsCallback.cpp
	g++ -o $(OBJDIR)/jsCallback.o -Wall $(CXXFLAGS) -c jsbindings/jsCallback.cpp


SRCS=$(PX_SRCS) $(RT_SRCS) rtNode.cpp pxMain_node.cpp

OBJS=$(patsubst %.cpp, $(OBJDIR)/%.o, $(notdir $(SRCS)))
OBJS:=$(patsubst %.c, $(OBJDIR)/%.o, $(OBJS))
OBJS: $(SRCS)

$(OBJDIR)/%.o : %.cpp
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(CXX) -c $(CXXFLAGS) $< -o $@

$(OBJDIR)/%.o : %.c
	@[ -d $(OBJDIR) ] || mkdir -p $(OBJDIR)
	$(CC) -c $(CXXFLAGS) $< -o $@


rtNode: $(OBJS)
	$(CXX) $(OBJS) $(LDFLAGS) -o rtNode

